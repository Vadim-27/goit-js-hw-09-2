{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,OAAQC,SAASC,cAAc,SAC/BC,aAAcF,SAASC,cAAc,uBACrCE,YAAaH,SAASC,cAAc,sBACpCG,cAAeJ,SAASC,cAAc,yBAKxC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUC,UAGpBG,EAAO,CAAEJ,WAAUC,S,GAGpBA,E,IAbPT,EAAKC,OAAOe,iBAAiB,UAkB7B,SAAsBC,GACpBA,EAAEC,iBAKF,IAJA,IAAId,EAAee,OAAOnB,EAAKI,aAAagB,OACxCf,EAAcc,OAAOnB,EAAKK,YAAYe,OACtCd,EAAgBa,OAAOnB,EAAKM,cAAcc,OAErCC,EAAI,EAAGA,EAAIf,EAAee,GAAK,EACtCd,EAAcc,EAAGjB,GAAgBC,GAC9BiB,MAAK,SAAAC,G,IAAGf,EAAQe,EAARf,SAAUC,EAAKc,EAALd,MACjBe,EAAA1B,GAAS2B,OAAOC,QACd,uBAAwCC,OAAfnB,EAAS,QAAYmB,OAANlB,EAAM,M,IAEjDmB,OAAM,SAAAL,G,IAAGf,EAAQe,EAARf,SAAUC,EAAKc,EAALd,MAClBe,EAAA1B,GAAS2B,OAAOI,QACd,sBAAqCF,OAAfnB,EAAS,QAAYmB,OAANlB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  formEl: document.querySelector('.form'),\n  firstDelayEl: document.querySelector('input[name=\"delay\"]'),\n  stepDelayEl: document.querySelector('input[name=\"step\"]'),\n  amountDelayEl: document.querySelector('input[name=\"amount\"]'),\n};\n\nrefs.formEl.addEventListener('submit', onFormSubmit);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay })\n        // Fulfill\n      } else {\n        reject({ position, delay })\n        // Reject\n      }\n    }, delay);\n  });\n  \n}\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n  let firstDelayEl = Number(refs.firstDelayEl.value);\n  let stepDelayEl = Number(refs.stepDelayEl.value);\n  let amountDelayEl = Number(refs.amountDelayEl.value);\n\n  for (let i = 0; i < amountDelayEl; i += 1) {\n    createPromise(i, firstDelayEl += stepDelayEl)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n}\n\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$refs","formEl","document","querySelector","firstDelayEl","stepDelayEl","amountDelayEl","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","e","preventDefault","Number","value","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.b11e490f.js.map"}